// ==== SET SIZE ====
@mixin size($width, $height:$width) {
  width: $width;
  height: $height;
}

// === SET ABOUSLUTE ===
@mixin absolute($direction: "left", $postion: absolute) {
  position: $postion;

  @if $direction==left {
    left: 50%;
    transform: translateX(-50%);
  }

  @if $direction==top {
    top: 50%;
    transform: translateY(-50%);
  }

  @if $direction==both {
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
  }
}

// ==== BACKGROUND ====
@mixin bg($color: red) {
  background-color: $color;
}

// === abouslute overlay ====
@mixin aboslute-full {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

// ==== responsive max-width =====
@mixin maxWidth($point) {
  @media screen and (max-width: $point) {
    @content;
  }
}

// ==== responsive min-width =====
@mixin minWidth($point) {
  @media screen and (min-width: $point) {
    @content;
  }
}

// ====== FLEX BOX ========
@mixin flex($align-item: stretch, $justify-content: flex-start, $direction: row, $flex: flex, $wrap: nowrap) {
  display: $flex;
  align-items: $align-item;
  justify-content: $justify-content;
  flex-direction: $direction;
  flex-wrap: $wrap;
}

// ====== HIDE SCROLL ======
@mixin hideScroll {
  -ms-overflow-style: none;
  scrollbar-width: none;

  &::-webkit-scrollbar {
    display: none;
  }
}

// ========== BREAK LINE ==========
@mixin textClamp($rows: 1, $size: 100%) { 
  display: -webkit-box;
  -webkit-line-clamp: $rows;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
  width: $size;
  max-width: $size;
  white-space: pre-wrap;
  word-break: break-word;
}

@mixin hoverEffect($itemClass, $contentClass, $transform: true) {
  #{$itemClass} {
    position: relative;
    z-index: 1;
    transition: transform .25s linear;

    @if $transform==true {

      &::after {
        content: "";
        @include aboslute-full;
        @include bg($third-color);
        z-index: -1;
        transition: all .25s linear;
      }
    }

    &:hover {
      cursor: pointer;

      #{$contentClass} {
        opacity: 1;
        visibility: visible;
      }

      @if $transform==true {
        transform: translate(-1rem, -1rem);

        &::after {
          transform: translate(1rem, 1rem);
        }
      }

    }
  }

  #{$contentClass} {
    background: linear-gradient(to bottom, rgba($primary-color, 0.8), rgba($secondary-color, 0.8)) no-repeat center / cover;
    z-index: 2;
    overflow: hidden;
    opacity: 0;
    @include aboslute-full;
    @include flex(center, center, column);
  }

}

// touch slider

@mixin touchSlider($width: 80%, $gap: 2.5rem, $padding : 1rem) {
  display: grid !important;
  justify-content: flex-start !important;
  grid-template-columns: unset;
  grid-column-gap: $gap;
  grid-auto-flow: column;
  grid-auto-columns: $width;
  overflow-x: auto;
  padding: $padding;
  scroll-snap-type: x mandatory;
  scroll-snap-stop: always;
  @include hideScroll;

  &>* {
    scroll-snap-align: center;
    width: auto;
  }
}